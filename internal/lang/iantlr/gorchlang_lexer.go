// Code generated from gorchlang.g4 by ANTLR 4.13.2. DO NOT EDIT.

package iantlr

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type gorchlangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var GorchlangLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func gorchlanglexerLexerInit() {
	staticData := &GorchlangLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'START'", "'('", "','", "')'", "'{'", "'}'", "'FRAGMENT'", "'REGISTER'",
		"'ON_FINISH'", "'->'", "'['", "']'", "'UNFOLD'", "'GO'", "'WAIT'", "'NO_CHECK_MISS'",
		"'SKIP'", "'|'", "'SWITCH'", "'CASE'", "'=>'", "'OPERATOR'", "'='",
		"'@'", "'-'", "'s'", "'ms'", "'\\u00B5s'", "'h'", "'m'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "TRUE", "FALSE",
		"ID", "INT", "DQUOTA_STRING", "LINE_COMMENT", "COMMENT", "TERMINATOR",
		"WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "TRUE", "FALSE", "ID",
		"INT", "DQUOTA_STRING", "LINE_COMMENT", "COMMENT", "TERMINATOR", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 39, 307, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24,
		1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1,
		28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 30, 3, 30, 221, 8, 30, 1, 31, 1, 31, 1, 31, 1,
		31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 31, 3, 31, 238, 8, 31, 1, 32, 4, 32, 241, 8, 32, 11, 32, 12, 32, 242,
		1, 32, 5, 32, 246, 8, 32, 10, 32, 12, 32, 249, 9, 32, 1, 33, 4, 33, 252,
		8, 33, 11, 33, 12, 33, 253, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 5,
		34, 262, 8, 34, 10, 34, 12, 34, 265, 9, 34, 1, 34, 1, 34, 1, 35, 1, 35,
		1, 35, 1, 35, 5, 35, 273, 8, 35, 10, 35, 12, 35, 276, 9, 35, 1, 35, 1,
		35, 1, 36, 1, 36, 1, 36, 1, 36, 5, 36, 284, 8, 36, 10, 36, 12, 36, 287,
		9, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 4, 37, 295, 8, 37, 11,
		37, 12, 37, 296, 1, 37, 1, 37, 1, 38, 4, 38, 302, 8, 38, 11, 38, 12, 38,
		303, 1, 38, 1, 38, 1, 285, 0, 39, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 1, 0, 5, 3, 0, 65, 90, 95,
		95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34, 92, 92,
		2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32, 32, 320, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 1, 79,
		1, 0, 0, 0, 3, 85, 1, 0, 0, 0, 5, 87, 1, 0, 0, 0, 7, 89, 1, 0, 0, 0, 9,
		91, 1, 0, 0, 0, 11, 93, 1, 0, 0, 0, 13, 95, 1, 0, 0, 0, 15, 104, 1, 0,
		0, 0, 17, 113, 1, 0, 0, 0, 19, 123, 1, 0, 0, 0, 21, 126, 1, 0, 0, 0, 23,
		128, 1, 0, 0, 0, 25, 130, 1, 0, 0, 0, 27, 137, 1, 0, 0, 0, 29, 140, 1,
		0, 0, 0, 31, 145, 1, 0, 0, 0, 33, 159, 1, 0, 0, 0, 35, 164, 1, 0, 0, 0,
		37, 166, 1, 0, 0, 0, 39, 173, 1, 0, 0, 0, 41, 178, 1, 0, 0, 0, 43, 181,
		1, 0, 0, 0, 45, 190, 1, 0, 0, 0, 47, 192, 1, 0, 0, 0, 49, 194, 1, 0, 0,
		0, 51, 196, 1, 0, 0, 0, 53, 198, 1, 0, 0, 0, 55, 201, 1, 0, 0, 0, 57, 204,
		1, 0, 0, 0, 59, 206, 1, 0, 0, 0, 61, 220, 1, 0, 0, 0, 63, 237, 1, 0, 0,
		0, 65, 240, 1, 0, 0, 0, 67, 251, 1, 0, 0, 0, 69, 255, 1, 0, 0, 0, 71, 268,
		1, 0, 0, 0, 73, 279, 1, 0, 0, 0, 75, 294, 1, 0, 0, 0, 77, 301, 1, 0, 0,
		0, 79, 80, 5, 83, 0, 0, 80, 81, 5, 84, 0, 0, 81, 82, 5, 65, 0, 0, 82, 83,
		5, 82, 0, 0, 83, 84, 5, 84, 0, 0, 84, 2, 1, 0, 0, 0, 85, 86, 5, 40, 0,
		0, 86, 4, 1, 0, 0, 0, 87, 88, 5, 44, 0, 0, 88, 6, 1, 0, 0, 0, 89, 90, 5,
		41, 0, 0, 90, 8, 1, 0, 0, 0, 91, 92, 5, 123, 0, 0, 92, 10, 1, 0, 0, 0,
		93, 94, 5, 125, 0, 0, 94, 12, 1, 0, 0, 0, 95, 96, 5, 70, 0, 0, 96, 97,
		5, 82, 0, 0, 97, 98, 5, 65, 0, 0, 98, 99, 5, 71, 0, 0, 99, 100, 5, 77,
		0, 0, 100, 101, 5, 69, 0, 0, 101, 102, 5, 78, 0, 0, 102, 103, 5, 84, 0,
		0, 103, 14, 1, 0, 0, 0, 104, 105, 5, 82, 0, 0, 105, 106, 5, 69, 0, 0, 106,
		107, 5, 71, 0, 0, 107, 108, 5, 73, 0, 0, 108, 109, 5, 83, 0, 0, 109, 110,
		5, 84, 0, 0, 110, 111, 5, 69, 0, 0, 111, 112, 5, 82, 0, 0, 112, 16, 1,
		0, 0, 0, 113, 114, 5, 79, 0, 0, 114, 115, 5, 78, 0, 0, 115, 116, 5, 95,
		0, 0, 116, 117, 5, 70, 0, 0, 117, 118, 5, 73, 0, 0, 118, 119, 5, 78, 0,
		0, 119, 120, 5, 73, 0, 0, 120, 121, 5, 83, 0, 0, 121, 122, 5, 72, 0, 0,
		122, 18, 1, 0, 0, 0, 123, 124, 5, 45, 0, 0, 124, 125, 5, 62, 0, 0, 125,
		20, 1, 0, 0, 0, 126, 127, 5, 91, 0, 0, 127, 22, 1, 0, 0, 0, 128, 129, 5,
		93, 0, 0, 129, 24, 1, 0, 0, 0, 130, 131, 5, 85, 0, 0, 131, 132, 5, 78,
		0, 0, 132, 133, 5, 70, 0, 0, 133, 134, 5, 79, 0, 0, 134, 135, 5, 76, 0,
		0, 135, 136, 5, 68, 0, 0, 136, 26, 1, 0, 0, 0, 137, 138, 5, 71, 0, 0, 138,
		139, 5, 79, 0, 0, 139, 28, 1, 0, 0, 0, 140, 141, 5, 87, 0, 0, 141, 142,
		5, 65, 0, 0, 142, 143, 5, 73, 0, 0, 143, 144, 5, 84, 0, 0, 144, 30, 1,
		0, 0, 0, 145, 146, 5, 78, 0, 0, 146, 147, 5, 79, 0, 0, 147, 148, 5, 95,
		0, 0, 148, 149, 5, 67, 0, 0, 149, 150, 5, 72, 0, 0, 150, 151, 5, 69, 0,
		0, 151, 152, 5, 67, 0, 0, 152, 153, 5, 75, 0, 0, 153, 154, 5, 95, 0, 0,
		154, 155, 5, 77, 0, 0, 155, 156, 5, 73, 0, 0, 156, 157, 5, 83, 0, 0, 157,
		158, 5, 83, 0, 0, 158, 32, 1, 0, 0, 0, 159, 160, 5, 83, 0, 0, 160, 161,
		5, 75, 0, 0, 161, 162, 5, 73, 0, 0, 162, 163, 5, 80, 0, 0, 163, 34, 1,
		0, 0, 0, 164, 165, 5, 124, 0, 0, 165, 36, 1, 0, 0, 0, 166, 167, 5, 83,
		0, 0, 167, 168, 5, 87, 0, 0, 168, 169, 5, 73, 0, 0, 169, 170, 5, 84, 0,
		0, 170, 171, 5, 67, 0, 0, 171, 172, 5, 72, 0, 0, 172, 38, 1, 0, 0, 0, 173,
		174, 5, 67, 0, 0, 174, 175, 5, 65, 0, 0, 175, 176, 5, 83, 0, 0, 176, 177,
		5, 69, 0, 0, 177, 40, 1, 0, 0, 0, 178, 179, 5, 61, 0, 0, 179, 180, 5, 62,
		0, 0, 180, 42, 1, 0, 0, 0, 181, 182, 5, 79, 0, 0, 182, 183, 5, 80, 0, 0,
		183, 184, 5, 69, 0, 0, 184, 185, 5, 82, 0, 0, 185, 186, 5, 65, 0, 0, 186,
		187, 5, 84, 0, 0, 187, 188, 5, 79, 0, 0, 188, 189, 5, 82, 0, 0, 189, 44,
		1, 0, 0, 0, 190, 191, 5, 61, 0, 0, 191, 46, 1, 0, 0, 0, 192, 193, 5, 64,
		0, 0, 193, 48, 1, 0, 0, 0, 194, 195, 5, 45, 0, 0, 195, 50, 1, 0, 0, 0,
		196, 197, 5, 115, 0, 0, 197, 52, 1, 0, 0, 0, 198, 199, 5, 109, 0, 0, 199,
		200, 5, 115, 0, 0, 200, 54, 1, 0, 0, 0, 201, 202, 5, 181, 0, 0, 202, 203,
		5, 115, 0, 0, 203, 56, 1, 0, 0, 0, 204, 205, 5, 104, 0, 0, 205, 58, 1,
		0, 0, 0, 206, 207, 5, 109, 0, 0, 207, 60, 1, 0, 0, 0, 208, 209, 5, 84,
		0, 0, 209, 210, 5, 82, 0, 0, 210, 211, 5, 85, 0, 0, 211, 221, 5, 69, 0,
		0, 212, 213, 5, 116, 0, 0, 213, 214, 5, 114, 0, 0, 214, 215, 5, 117, 0,
		0, 215, 221, 5, 101, 0, 0, 216, 217, 5, 84, 0, 0, 217, 218, 5, 114, 0,
		0, 218, 219, 5, 117, 0, 0, 219, 221, 5, 101, 0, 0, 220, 208, 1, 0, 0, 0,
		220, 212, 1, 0, 0, 0, 220, 216, 1, 0, 0, 0, 221, 62, 1, 0, 0, 0, 222, 223,
		5, 70, 0, 0, 223, 224, 5, 65, 0, 0, 224, 225, 5, 76, 0, 0, 225, 226, 5,
		83, 0, 0, 226, 238, 5, 69, 0, 0, 227, 228, 5, 102, 0, 0, 228, 229, 5, 97,
		0, 0, 229, 230, 5, 108, 0, 0, 230, 231, 5, 115, 0, 0, 231, 238, 5, 101,
		0, 0, 232, 233, 5, 70, 0, 0, 233, 234, 5, 97, 0, 0, 234, 235, 5, 108, 0,
		0, 235, 236, 5, 115, 0, 0, 236, 238, 5, 101, 0, 0, 237, 222, 1, 0, 0, 0,
		237, 227, 1, 0, 0, 0, 237, 232, 1, 0, 0, 0, 238, 64, 1, 0, 0, 0, 239, 241,
		7, 0, 0, 0, 240, 239, 1, 0, 0, 0, 241, 242, 1, 0, 0, 0, 242, 240, 1, 0,
		0, 0, 242, 243, 1, 0, 0, 0, 243, 247, 1, 0, 0, 0, 244, 246, 7, 1, 0, 0,
		245, 244, 1, 0, 0, 0, 246, 249, 1, 0, 0, 0, 247, 245, 1, 0, 0, 0, 247,
		248, 1, 0, 0, 0, 248, 66, 1, 0, 0, 0, 249, 247, 1, 0, 0, 0, 250, 252, 2,
		48, 57, 0, 251, 250, 1, 0, 0, 0, 252, 253, 1, 0, 0, 0, 253, 251, 1, 0,
		0, 0, 253, 254, 1, 0, 0, 0, 254, 68, 1, 0, 0, 0, 255, 263, 5, 34, 0, 0,
		256, 257, 5, 92, 0, 0, 257, 262, 9, 0, 0, 0, 258, 259, 5, 34, 0, 0, 259,
		262, 5, 34, 0, 0, 260, 262, 8, 2, 0, 0, 261, 256, 1, 0, 0, 0, 261, 258,
		1, 0, 0, 0, 261, 260, 1, 0, 0, 0, 262, 265, 1, 0, 0, 0, 263, 261, 1, 0,
		0, 0, 263, 264, 1, 0, 0, 0, 264, 266, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0,
		266, 267, 5, 34, 0, 0, 267, 70, 1, 0, 0, 0, 268, 269, 5, 47, 0, 0, 269,
		270, 5, 47, 0, 0, 270, 274, 1, 0, 0, 0, 271, 273, 8, 3, 0, 0, 272, 271,
		1, 0, 0, 0, 273, 276, 1, 0, 0, 0, 274, 272, 1, 0, 0, 0, 274, 275, 1, 0,
		0, 0, 275, 277, 1, 0, 0, 0, 276, 274, 1, 0, 0, 0, 277, 278, 6, 35, 0, 0,
		278, 72, 1, 0, 0, 0, 279, 280, 5, 47, 0, 0, 280, 281, 5, 42, 0, 0, 281,
		285, 1, 0, 0, 0, 282, 284, 9, 0, 0, 0, 283, 282, 1, 0, 0, 0, 284, 287,
		1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 286, 288, 1, 0,
		0, 0, 287, 285, 1, 0, 0, 0, 288, 289, 5, 42, 0, 0, 289, 290, 5, 47, 0,
		0, 290, 291, 1, 0, 0, 0, 291, 292, 6, 36, 0, 0, 292, 74, 1, 0, 0, 0, 293,
		295, 7, 3, 0, 0, 294, 293, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 294,
		1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298, 299, 6, 37,
		0, 0, 299, 76, 1, 0, 0, 0, 300, 302, 7, 4, 0, 0, 301, 300, 1, 0, 0, 0,
		302, 303, 1, 0, 0, 0, 303, 301, 1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304,
		305, 1, 0, 0, 0, 305, 306, 6, 38, 0, 0, 306, 78, 1, 0, 0, 0, 13, 0, 220,
		237, 242, 245, 247, 253, 261, 263, 274, 285, 296, 303, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// gorchlangLexerInit initializes any static state used to implement gorchlangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewgorchlangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GorchlangLexerInit() {
	staticData := &GorchlangLexerLexerStaticData
	staticData.once.Do(gorchlanglexerLexerInit)
}

// NewgorchlangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewgorchlangLexer(input antlr.CharStream) *gorchlangLexer {
	GorchlangLexerInit()
	l := new(gorchlangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &GorchlangLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "gorchlang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// gorchlangLexer tokens.
const (
	gorchlangLexerT__0          = 1
	gorchlangLexerT__1          = 2
	gorchlangLexerT__2          = 3
	gorchlangLexerT__3          = 4
	gorchlangLexerT__4          = 5
	gorchlangLexerT__5          = 6
	gorchlangLexerT__6          = 7
	gorchlangLexerT__7          = 8
	gorchlangLexerT__8          = 9
	gorchlangLexerT__9          = 10
	gorchlangLexerT__10         = 11
	gorchlangLexerT__11         = 12
	gorchlangLexerT__12         = 13
	gorchlangLexerT__13         = 14
	gorchlangLexerT__14         = 15
	gorchlangLexerT__15         = 16
	gorchlangLexerT__16         = 17
	gorchlangLexerT__17         = 18
	gorchlangLexerT__18         = 19
	gorchlangLexerT__19         = 20
	gorchlangLexerT__20         = 21
	gorchlangLexerT__21         = 22
	gorchlangLexerT__22         = 23
	gorchlangLexerT__23         = 24
	gorchlangLexerT__24         = 25
	gorchlangLexerT__25         = 26
	gorchlangLexerT__26         = 27
	gorchlangLexerT__27         = 28
	gorchlangLexerT__28         = 29
	gorchlangLexerT__29         = 30
	gorchlangLexerTRUE          = 31
	gorchlangLexerFALSE         = 32
	gorchlangLexerID            = 33
	gorchlangLexerINT           = 34
	gorchlangLexerDQUOTA_STRING = 35
	gorchlangLexerLINE_COMMENT  = 36
	gorchlangLexerCOMMENT       = 37
	gorchlangLexerTERMINATOR    = 38
	gorchlangLexerWS            = 39
)
